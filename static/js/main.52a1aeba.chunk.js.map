{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TEXT_ALPHABET","SORT_TEXT_LENGTH","SORT_TEXT_REVERSE","getReadyGoods","goods","sortText","readyGoods","sort","good1","good2","localeCompare","length","App","useState","setSortText","reverseText","setReverseText","sortedGoods","reverse","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,WACrBC,EAAmB,SACnBC,EAAoB,UAE1B,SAASC,EAAcC,EAAvB,GAA6C,IAAbC,EAAY,EAAZA,SACxBC,EAAU,YAAOF,GAiBvB,OAfIC,GACFC,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQJ,GACN,KAAKL,EACH,OAAOQ,EAAME,cAAcD,GAE7B,KAAKR,EACH,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRL,EAGF,IAAMM,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACIC,EAAcd,EAAcJ,EAAiB,CAAEM,aAWnD,OATIA,IAAaH,GAAqBa,IAAgBb,EACpDe,EAAcA,EAAYC,UACjBH,IAAgBb,EACzBe,EAAclB,EAAgBmB,UACrBb,IAAaL,GACnBe,IAAgBb,IACnBe,EAAcd,EAAcc,EAAa,CAAEZ,cAI3C,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMN,EAAYd,IAC3BqB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAaL,IAJ7B,iCAUA,wBACEoB,QAAS,kBAAMN,EAAYb,IAC3BoB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAaJ,IAJ7B,4BAUA,wBACEmB,QAASL,EAAc,WACrBC,EAAe,KACb,WACFA,EAAed,IAGjBmB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYP,IAAgBb,IAThC,sBAeEG,GAAYU,IACd,wBACEK,QAAS,WACPN,EAAY,IACZE,EAAe,KAEjBK,KAAK,SACLF,UAAU,4BANZ,sBAaF,6BACGF,EAAYM,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.52a1aeba.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TEXT_ALPHABET = 'alphabet';\nconst SORT_TEXT_LENGTH = 'length';\nconst SORT_TEXT_REVERSE = 'reverse';\n\nfunction getReadyGoods(goods, { sortText }) {\n  const readyGoods = [...goods];\n\n  if (sortText) {\n    readyGoods.sort((good1, good2) => {\n      switch (sortText) {\n        case SORT_TEXT_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_TEXT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return readyGoods;\n}\n\nexport const App = () => {\n  const [sortText, setSortText] = useState('');\n  const [reverseText, setReverseText] = useState('');\n  let sortedGoods = getReadyGoods(goodsFromServer, { sortText });\n\n  if (sortText !== SORT_TEXT_REVERSE && reverseText === SORT_TEXT_REVERSE) {\n    sortedGoods = sortedGoods.reverse();\n  } else if (reverseText === SORT_TEXT_REVERSE) {\n    sortedGoods = goodsFromServer.reverse();\n  } else if (sortText === SORT_TEXT_ALPHABET\n    && reverseText === SORT_TEXT_REVERSE) {\n    sortedGoods = getReadyGoods(sortedGoods, { sortText });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortText(SORT_TEXT_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortText !== SORT_TEXT_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortText(SORT_TEXT_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortText !== SORT_TEXT_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseText ? () => {\n            setReverseText('');\n          } : () => {\n            setReverseText(SORT_TEXT_REVERSE);\n          }\n        }\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': reverseText !== SORT_TEXT_REVERSE,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortText || reverseText) && (\n        <button\n          onClick={() => {\n            setSortText('');\n            setReverseText('');\n          }}\n          type=\"button\"\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}